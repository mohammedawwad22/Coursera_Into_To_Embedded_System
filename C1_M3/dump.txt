c1m3.out:     file format elf32-littlearm


Disassembly of section .text:

00000000 <__do_global_dtors_aux>:
   0:   b510            push    {r4, lr}
   2:   4c05            ldr     r4, [pc, #20]   ; (18 <__do_global_dtors_aux+0x18>)
   4:   7823            ldrb    r3, [r4, #0]
   6:   b933            cbnz    r3, 16 <__do_global_dtors_aux+0x16>
   8:   4b04            ldr     r3, [pc, #16]   ; (1c <__do_global_dtors_aux+0x1c>)
   a:   b113            cbz     r3, 12 <__do_global_dtors_aux+0x12>
   c:   4804            ldr     r0, [pc, #16]   ; (20 <__do_global_dtors_aux+0x20>)
   e:   f3af 8000       nop.w
  12:   2301            movs    r3, #1
  14:   7023            strb    r3, [r4, #0]
  16:   bd10            pop     {r4, pc}
  18:   20000874        .word   0x20000874
  1c:   00000000        .word   0x00000000
  20:   00000dd0        .word   0x00000dd0

00000024 <frame_dummy>:
  24:   b508            push    {r3, lr}
  26:   4b03            ldr     r3, [pc, #12]   ; (34 <frame_dummy+0x10>)
  28:   b11b            cbz     r3, 32 <frame_dummy+0xe>
  2a:   4903            ldr     r1, [pc, #12]   ; (38 <frame_dummy+0x14>)
  2c:   4803            ldr     r0, [pc, #12]   ; (3c <frame_dummy+0x18>)
  2e:   f3af 8000       nop.w
  32:   bd08            pop     {r3, pc}
  34:   00000000        .word   0x00000000
  38:   20000878        .word   0x20000878
  3c:   00000dd0        .word   0x00000dd0

00000040 <_stack_init>:
  40:   f5a3 3a80       sub.w   sl, r3, #65536  ; 0x10000
  44:   4770            bx      lr
  46:   bf00            nop

00000048 <_mainCRTStartup>:
  48:   4b17            ldr     r3, [pc, #92]   ; (a8 <_mainCRTStartup+0x60>)
  4a:   2b00            cmp     r3, #0
  4c:   bf08            it      eq
  4e:   4b13            ldreq   r3, [pc, #76]   ; (9c <_mainCRTStartup+0x54>)
  50:   469d            mov     sp, r3
  52:   f7ff fff5       bl      40 <_stack_init>
  56:   2100            movs    r1, #0
  58:   468b            mov     fp, r1
  5a:   460f            mov     r7, r1
  5c:   4813            ldr     r0, [pc, #76]   ; (ac <_mainCRTStartup+0x64>)
  5e:   4a14            ldr     r2, [pc, #80]   ; (b0 <_mainCRTStartup+0x68>)
  60:   1a12            subs    r2, r2, r0
  62:   f000 fb8f       bl      784 <memset>
  66:   4b0e            ldr     r3, [pc, #56]   ; (a0 <_mainCRTStartup+0x58>)
  68:   2b00            cmp     r3, #0
  6a:   d000            beq.n   6e <_mainCRTStartup+0x26>
  6c:   4798            blx     r3
  6e:   4b0d            ldr     r3, [pc, #52]   ; (a4 <_mainCRTStartup+0x5c>)
  70:   2b00            cmp     r3, #0
  72:   d000            beq.n   76 <_mainCRTStartup+0x2e>
  74:   4798            blx     r3
  76:   2000            movs    r0, #0
  78:   2100            movs    r1, #0
  7a:   0004            movs    r4, r0
  7c:   000d            movs    r5, r1
  7e:   480d            ldr     r0, [pc, #52]   ; (b4 <_mainCRTStartup+0x6c>)
  80:   2800            cmp     r0, #0
  82:   d002            beq.n   8a <_mainCRTStartup+0x42>
  84:   480c            ldr     r0, [pc, #48]   ; (b8 <_mainCRTStartup+0x70>)
  86:   f000 fc5b       bl      940 <atexit>
  8a:   f000 f88d       bl      1a8 <__libc_init_array>
  8e:   0020            movs    r0, r4
  90:   0029            movs    r1, r5
  92:   f000 f813       bl      bc <main>
  96:   f000 f877       bl      188 <exit>
  9a:   bf00            nop
  9c:   00080000        .word   0x00080000
        ...
  a8:   20000900        .word   0x20000900
  ac:   20000874        .word   0x20000874
  b0:   200008fc        .word   0x200008fc
  b4:   00000941        .word   0x00000941
  b8:   0000094d        .word   0x0000094d

000000bc <main>:
char g3 = 12;
char g4 = 0;
extern char g5[N];

int main()
{
  bc:   b590            push    {r4, r7, lr}
  be:   b083            sub     sp, #12
  c0:   af00            add     r7, sp, #0
  register int l1;
  int * l2;
  volatile int l3 = 12;
  c2:   230c            movs    r3, #12
  c4:   603b            str     r3, [r7, #0]

  l2 = (int *) malloc( N * g2 * sizeof(char) );
  c6:   232d            movs    r3, #45 ; 0x2d
  c8:   461a            mov     r2, r3
  ca:   4613            mov     r3, r2
  cc:   009b            lsls    r3, r3, #2
  ce:   4413            add     r3, r2
  d0:   005b            lsls    r3, r3, #1
  d2:   4618            mov     r0, r3
  d4:   f000 f88c       bl      1f0 <malloc>
  d8:   4603            mov     r3, r0
  da:   607b            str     r3, [r7, #4]

  if ( ! l2 )
  dc:   687b            ldr     r3, [r7, #4]
  de:   2b00            cmp     r3, #0
  e0:   d102            bne.n   e8 <main+0x2c>
  {
    return -1;
  e2:   f04f 33ff       mov.w   r3, #4294967295
  e6:   e00e            b.n     106 <main+0x4a>
  }

  for( l1 = 0; l1 < g2; l3++)
  e8:   2400            movs    r4, #0
  ea:   e008            b.n     fe <main+0x42>
  {
    g1 = func(l2);
  ec:   6878            ldr     r0, [r7, #4]
  ee:   f000 f811       bl      114 <func>
  f2:   4603            mov     r3, r0
  f4:   4a06            ldr     r2, [pc, #24]   ; (110 <main+0x54>)
  f6:   6013            str     r3, [r2, #0]
  for( l1 = 0; l1 < g2; l3++)
  f8:   683b            ldr     r3, [r7, #0]
  fa:   3301            adds    r3, #1
  fc:   603b            str     r3, [r7, #0]
  fe:   232d            movs    r3, #45 ; 0x2d
 100:   429c            cmp     r4, r3
 102:   dbf3            blt.n   ec <main+0x30>
  }

  return 0;
 104:   2300            movs    r3, #0
}
 106:   4618            mov     r0, r3
 108:   370c            adds    r7, #12
 10a:   46bd            mov     sp, r7
 10c:   bd90            pop     {r4, r7, pc}
 10e:   bf00            nop
 110:   20000890        .word   0x20000890

00000114 <func>:
#define SOME_VALUE (6)

int g5[10] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};

int func(int * f1)
{
 114:   b480            push    {r7}
 116:   b085            sub     sp, #20
 118:   af00            add     r7, sp, #0
 11a:   6078            str     r0, [r7, #4]
  static int f2;
  unsigned int f3 = 0;
 11c:   2300            movs    r3, #0
 11e:   60fb            str     r3, [r7, #12]
  volatile char * f4 = "Hello World!\n";
 120:   4b16            ldr     r3, [pc, #88]   ; (17c <func+0x68>)
 122:   60bb            str     r3, [r7, #8]

  f2++;
 124:   4b16            ldr     r3, [pc, #88]   ; (180 <func+0x6c>)
 126:   681b            ldr     r3, [r3, #0]
 128:   3301            adds    r3, #1
 12a:   4a15            ldr     r2, [pc, #84]   ; (180 <func+0x6c>)
 12c:   6013            str     r3, [r2, #0]
  *(&g5[0] + f2) = f3;
 12e:   4b14            ldr     r3, [pc, #80]   ; (180 <func+0x6c>)
 130:   681b            ldr     r3, [r3, #0]
 132:   009b            lsls    r3, r3, #2
 134:   4a13            ldr     r2, [pc, #76]   ; (184 <func+0x70>)
 136:   4413            add     r3, r2
 138:   68fa            ldr     r2, [r7, #12]
 13a:   601a            str     r2, [r3, #0]

  for (f3 = 0; f3 < SOME_VALUE; f3++)
 13c:   2300            movs    r3, #0
 13e:   60fb            str     r3, [r7, #12]
 140:   e011            b.n     166 <func+0x52>
  {
    g5[f3] = f4[f3];
 142:   68ba            ldr     r2, [r7, #8]
 144:   68fb            ldr     r3, [r7, #12]
 146:   4413            add     r3, r2
 148:   781b            ldrb    r3, [r3, #0]
 14a:   b2db            uxtb    r3, r3
 14c:   4619            mov     r1, r3
 14e:   4a0d            ldr     r2, [pc, #52]   ; (184 <func+0x70>)
 150:   68fb            ldr     r3, [r7, #12]
 152:   f842 1023       str.w   r1, [r2, r3, lsl #2]
    f2++;
 156:   4b0a            ldr     r3, [pc, #40]   ; (180 <func+0x6c>)
 158:   681b            ldr     r3, [r3, #0]
 15a:   3301            adds    r3, #1
 15c:   4a08            ldr     r2, [pc, #32]   ; (180 <func+0x6c>)
 15e:   6013            str     r3, [r2, #0]
  for (f3 = 0; f3 < SOME_VALUE; f3++)
 160:   68fb            ldr     r3, [r7, #12]
 162:   3301            adds    r3, #1
 164:   60fb            str     r3, [r7, #12]
 166:   68fb            ldr     r3, [r7, #12]
 168:   2b05            cmp     r3, #5
 16a:   d9ea            bls.n   142 <func+0x2e>
  }

  return f2;
 16c:   4b04            ldr     r3, [pc, #16]   ; (180 <func+0x6c>)
 16e:   681b            ldr     r3, [r3, #0]
}
 170:   4618            mov     r0, r3
 172:   3714            adds    r7, #20
 174:   46bd            mov     sp, r7
 176:   f85d 7b04       ldr.w   r7, [sp], #4
 17a:   4770            bx      lr
 17c:   00000dbc        .word   0x00000dbc
 180:   20000898        .word   0x20000898
 184:   20000008        .word   0x20000008

00000188 <exit>:
 188:   b508            push    {r3, lr}
 18a:   2100            movs    r1, #0
 18c:   4604            mov     r4, r0
 18e:   f000 fb71       bl      874 <__call_exitprocs>
 192:   4b04            ldr     r3, [pc, #16]   ; (1a4 <exit+0x1c>)
 194:   6818            ldr     r0, [r3, #0]
 196:   6bc3            ldr     r3, [r0, #60]   ; 0x3c
 198:   b103            cbz     r3, 19c <exit+0x14>
 19a:   4798            blx     r3
 19c:   4620            mov     r0, r4
 19e:   f000 fdf7       bl      d90 <_exit>
 1a2:   bf00            nop
 1a4:   00000dcc        .word   0x00000dcc

000001a8 <__libc_init_array>:
 1a8:   b570            push    {r4, r5, r6, lr}
 1aa:   4e0d            ldr     r6, [pc, #52]   ; (1e0 <__libc_init_array+0x38>)
 1ac:   4d0d            ldr     r5, [pc, #52]   ; (1e4 <__libc_init_array+0x3c>)
 1ae:   1b76            subs    r6, r6, r5
 1b0:   10b6            asrs    r6, r6, #2
 1b2:   d006            beq.n   1c2 <__libc_init_array+0x1a>
 1b4:   2400            movs    r4, #0
 1b6:   f855 3b04       ldr.w   r3, [r5], #4
 1ba:   3401            adds    r4, #1
 1bc:   4798            blx     r3
 1be:   42a6            cmp     r6, r4
 1c0:   d1f9            bne.n   1b6 <__libc_init_array+0xe>
 1c2:   4e09            ldr     r6, [pc, #36]   ; (1e8 <__libc_init_array+0x40>)
 1c4:   4d09            ldr     r5, [pc, #36]   ; (1ec <__libc_init_array+0x44>)
 1c6:   1b76            subs    r6, r6, r5
 1c8:   f000 fde8       bl      d9c <_init>
 1cc:   10b6            asrs    r6, r6, #2
 1ce:   d006            beq.n   1de <__libc_init_array+0x36>
 1d0:   2400            movs    r4, #0
 1d2:   f855 3b04       ldr.w   r3, [r5], #4
 1d6:   3401            adds    r4, #1
 1d8:   4798            blx     r3
 1da:   42a6            cmp     r6, r4
 1dc:   d1f9            bne.n   1d2 <__libc_init_array+0x2a>
 1de:   bd70            pop     {r4, r5, r6, pc}
        ...
 1e8:   00000d9c        .word   0x00000d9c
 1ec:   00000d94        .word   0x00000d94

000001f0 <malloc>:
 1f0:   4b02            ldr     r3, [pc, #8]    ; (1fc <malloc+0xc>)
 1f2:   4601            mov     r1, r0
 1f4:   6818            ldr     r0, [r3, #0]
 1f6:   f000 b80b       b.w     210 <_malloc_r>
 1fa:   bf00            nop
 1fc:   20000030        .word   0x20000030

00000200 <free>:
 200:   4b02            ldr     r3, [pc, #8]    ; (20c <free+0xc>)
 202:   4601            mov     r1, r0
 204:   6818            ldr     r0, [r3, #0]
 206:   f000 bc07       b.w     a18 <_free_r>
 20a:   bf00            nop
 20c:   20000030        .word   0x20000030

00000210 <_malloc_r>:
 210:   e92d 4ff0       stmdb   sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 214:   f101 050b       add.w   r5, r1, #11
 218:   2d16            cmp     r5, #22
 21a:   b083            sub     sp, #12
 21c:   4606            mov     r6, r0
 21e:   d824            bhi.n   26a <_malloc_r+0x5a>
 220:   2910            cmp     r1, #16
 222:   f200 80b7       bhi.w   394 <_malloc_r+0x184>
 226:   f000 fafd       bl      824 <__malloc_lock>
 22a:   2510            movs    r5, #16
 22c:   2102            movs    r1, #2
 22e:   2318            movs    r3, #24
 230:   f8df 84f0       ldr.w   r8, [pc, #1264] ; 724 <_malloc_r+0x514>
 234:   4443            add     r3, r8
 236:   f1a3 0208       sub.w   r2, r3, #8
 23a:   685c            ldr     r4, [r3, #4]
 23c:   4294            cmp     r4, r2
 23e:   f000 80b5       beq.w   3ac <_malloc_r+0x19c>
 242:   6863            ldr     r3, [r4, #4]
 244:   f023 0303       bic.w   r3, r3, #3
 248:   4423            add     r3, r4
 24a:   e9d4 5102       ldrd    r5, r1, [r4, #8]
 24e:   685a            ldr     r2, [r3, #4]
 250:   60e9            str     r1, [r5, #12]
 252:   f042 0201       orr.w   r2, r2, #1
 256:   4630            mov     r0, r6
 258:   608d            str     r5, [r1, #8]
 25a:   605a            str     r2, [r3, #4]
 25c:   f000 fae8       bl      830 <__malloc_unlock>
 260:   3408            adds    r4, #8
 262:   4620            mov     r0, r4
 264:   b003            add     sp, #12
 266:   e8bd 8ff0       ldmia.w sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 26a:   f035 0507       bics.w  r5, r5, #7
 26e:   f100 8091       bmi.w   394 <_malloc_r+0x184>
 272:   42a9            cmp     r1, r5
 274:   f200 808e       bhi.w   394 <_malloc_r+0x184>
 278:   f000 fad4       bl      824 <__malloc_lock>
 27c:   f5b5 7ffc       cmp.w   r5, #504        ; 0x1f8
 280:   f0c0 8190       bcc.w   5a4 <_malloc_r+0x394>
 284:   0a6b            lsrs    r3, r5, #9
 286:   f000 808c       beq.w   3a2 <_malloc_r+0x192>
 28a:   2b04            cmp     r3, #4
 28c:   f200 8166       bhi.w   55c <_malloc_r+0x34c>
 290:   09ab            lsrs    r3, r5, #6
 292:   f103 0139       add.w   r1, r3, #57     ; 0x39
 296:   f103 0738       add.w   r7, r3, #56     ; 0x38
 29a:   00cb            lsls    r3, r1, #3
 29c:   f8df 8484       ldr.w   r8, [pc, #1156] ; 724 <_malloc_r+0x514>
 2a0:   4443            add     r3, r8
 2a2:   f1a3 0008       sub.w   r0, r3, #8
 2a6:   685c            ldr     r4, [r3, #4]
 2a8:   42a0            cmp     r0, r4
 2aa:   d106            bne.n   2ba <_malloc_r+0xaa>
 2ac:   e00c            b.n     2c8 <_malloc_r+0xb8>
 2ae:   2a00            cmp     r2, #0
 2b0:   f280 8122       bge.w   4f8 <_malloc_r+0x2e8>
 2b4:   68e4            ldr     r4, [r4, #12]
 2b6:   42a0            cmp     r0, r4
 2b8:   d006            beq.n   2c8 <_malloc_r+0xb8>
 2ba:   6863            ldr     r3, [r4, #4]
 2bc:   f023 0303       bic.w   r3, r3, #3
 2c0:   1b5a            subs    r2, r3, r5
 2c2:   2a0f            cmp     r2, #15
 2c4:   ddf3            ble.n   2ae <_malloc_r+0x9e>
 2c6:   4639            mov     r1, r7
 2c8:   f8d8 4010       ldr.w   r4, [r8, #16]
 2cc:   f8df c458       ldr.w   ip, [pc, #1112] ; 728 <_malloc_r+0x518>
 2d0:   4564            cmp     r4, ip
 2d2:   d077            beq.n   3c4 <_malloc_r+0x1b4>
 2d4:   6862            ldr     r2, [r4, #4]
 2d6:   f022 0203       bic.w   r2, r2, #3
 2da:   1b53            subs    r3, r2, r5
 2dc:   2b0f            cmp     r3, #15
 2de:   f300 816f       bgt.w   5c0 <_malloc_r+0x3b0>
 2e2:   2b00            cmp     r3, #0
 2e4:   e9c8 cc04       strd    ip, ip, [r8, #16]
 2e8:   f280 8160       bge.w   5ac <_malloc_r+0x39c>
 2ec:   f5b2 7f00       cmp.w   r2, #512        ; 0x200
 2f0:   f080 8110       bcs.w   514 <_malloc_r+0x304>
 2f4:   08d3            lsrs    r3, r2, #3
 2f6:   3301            adds    r3, #1
 2f8:   0950            lsrs    r0, r2, #5
 2fa:   2201            movs    r2, #1
 2fc:   4082            lsls    r2, r0
 2fe:   f8d8 0004       ldr.w   r0, [r8, #4]
 302:   f858 7033       ldr.w   r7, [r8, r3, lsl #3]
 306:   60a7            str     r7, [r4, #8]
 308:   eb08 0ec3       add.w   lr, r8, r3, lsl #3
 30c:   4302            orrs    r2, r0
 30e:   f1ae 0008       sub.w   r0, lr, #8
 312:   60e0            str     r0, [r4, #12]
 314:   f8c8 2004       str.w   r2, [r8, #4]
 318:   f848 4033       str.w   r4, [r8, r3, lsl #3]
 31c:   60fc            str     r4, [r7, #12]
 31e:   108b            asrs    r3, r1, #2
 320:   2001            movs    r0, #1
 322:   4098            lsls    r0, r3
 324:   4290            cmp     r0, r2
 326:   d854            bhi.n   3d2 <_malloc_r+0x1c2>
 328:   4210            tst     r0, r2
 32a:   d106            bne.n   33a <_malloc_r+0x12a>
 32c:   f021 0103       bic.w   r1, r1, #3
 330:   0040            lsls    r0, r0, #1
 332:   4210            tst     r0, r2
 334:   f101 0104       add.w   r1, r1, #4
 338:   d0fa            beq.n   330 <_malloc_r+0x120>
 33a:   eb08 09c1       add.w   r9, r8, r1, lsl #3
 33e:   464c            mov     r4, r9
 340:   468e            mov     lr, r1
 342:   68e7            ldr     r7, [r4, #12]
 344:   42bc            cmp     r4, r7
 346:   d107            bne.n   358 <_malloc_r+0x148>
 348:   e114            b.n     574 <_malloc_r+0x364>
 34a:   2b00            cmp     r3, #0
 34c:   f280 811b       bge.w   586 <_malloc_r+0x376>
 350:   68ff            ldr     r7, [r7, #12]
 352:   42bc            cmp     r4, r7
 354:   f000 810e       beq.w   574 <_malloc_r+0x364>
 358:   687a            ldr     r2, [r7, #4]
 35a:   f022 0203       bic.w   r2, r2, #3
 35e:   1b53            subs    r3, r2, r5
 360:   2b0f            cmp     r3, #15
 362:   ddf2            ble.n   34a <_malloc_r+0x13a>
 364:   e9d7 e402       ldrd    lr, r4, [r7, #8]
 368:   1979            adds    r1, r7, r5
 36a:   f045 0501       orr.w   r5, r5, #1
 36e:   607d            str     r5, [r7, #4]
 370:   f043 0501       orr.w   r5, r3, #1
 374:   f8ce 400c       str.w   r4, [lr, #12]
 378:   4630            mov     r0, r6
 37a:   f8c4 e008       str.w   lr, [r4, #8]
 37e:   e9c8 1104       strd    r1, r1, [r8, #16]
 382:   e9c1 cc02       strd    ip, ip, [r1, #8]
 386:   604d            str     r5, [r1, #4]
 388:   50bb            str     r3, [r7, r2]
 38a:   f000 fa51       bl      830 <__malloc_unlock>
 38e:   f107 0408       add.w   r4, r7, #8
 392:   e002            b.n     39a <_malloc_r+0x18a>
 394:   230c            movs    r3, #12
 396:   6033            str     r3, [r6, #0]
 398:   2400            movs    r4, #0
 39a:   4620            mov     r0, r4
 39c:   b003            add     sp, #12
 39e:   e8bd 8ff0       ldmia.w sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 3a2:   f44f 7300       mov.w   r3, #512        ; 0x200
 3a6:   2140            movs    r1, #64 ; 0x40
 3a8:   273f            movs    r7, #63 ; 0x3f
 3aa:   e777            b.n     29c <_malloc_r+0x8c>
 3ac:   68dc            ldr     r4, [r3, #12]
 3ae:   42a3            cmp     r3, r4
 3b0:   bf08            it      eq
 3b2:   3102            addeq   r1, #2
 3b4:   f47f af45       bne.w   242 <_malloc_r+0x32>
 3b8:   f8d8 4010       ldr.w   r4, [r8, #16]
 3bc:   f8df c368       ldr.w   ip, [pc, #872]  ; 728 <_malloc_r+0x518>
 3c0:   4564            cmp     r4, ip
 3c2:   d187            bne.n   2d4 <_malloc_r+0xc4>
 3c4:   f8d8 2004       ldr.w   r2, [r8, #4]
 3c8:   108b            asrs    r3, r1, #2
 3ca:   2001            movs    r0, #1
 3cc:   4098            lsls    r0, r3
 3ce:   4290            cmp     r0, r2
 3d0:   d9aa            bls.n   328 <_malloc_r+0x118>
 3d2:   f8d8 4008       ldr.w   r4, [r8, #8]
 3d6:   6867            ldr     r7, [r4, #4]
 3d8:   f027 0703       bic.w   r7, r7, #3
 3dc:   42bd            cmp     r5, r7
 3de:   d802            bhi.n   3e6 <_malloc_r+0x1d6>
 3e0:   1b7b            subs    r3, r7, r5
 3e2:   2b0f            cmp     r3, #15
 3e4:   dc77            bgt.n   4d6 <_malloc_r+0x2c6>
 3e6:   f8df 9344       ldr.w   r9, [pc, #836]  ; 72c <_malloc_r+0x51c>
 3ea:   4bca            ldr     r3, [pc, #808]  ; (714 <_malloc_r+0x504>)
 3ec:   f8d9 2000       ldr.w   r2, [r9]
 3f0:   681b            ldr     r3, [r3, #0]
 3f2:   3201            adds    r2, #1
 3f4:   442b            add     r3, r5
 3f6:   eb04 0a07       add.w   sl, r4, r7
 3fa:   f000 812e       beq.w   65a <_malloc_r+0x44a>
 3fe:   f503 5380       add.w   r3, r3, #4096   ; 0x1000
 402:   330f            adds    r3, #15
 404:   f423 6b7f       bic.w   fp, r3, #4080   ; 0xff0
 408:   f02b 0b0f       bic.w   fp, fp, #15
 40c:   4659            mov     r1, fp
 40e:   4630            mov     r0, r6
 410:   f000 fa14       bl      83c <_sbrk_r>
 414:   1c41            adds    r1, r0, #1
 416:   4602            mov     r2, r0
 418:   f000 80eb       beq.w   5f2 <_malloc_r+0x3e2>
 41c:   4582            cmp     sl, r0
 41e:   f200 80e6       bhi.w   5ee <_malloc_r+0x3de>
 422:   4bbd            ldr     r3, [pc, #756]  ; (718 <_malloc_r+0x508>)
 424:   6819            ldr     r1, [r3, #0]
 426:   4459            add     r1, fp
 428:   6019            str     r1, [r3, #0]
 42a:   4608            mov     r0, r1
 42c:   f000 814b       beq.w   6c6 <_malloc_r+0x4b6>
 430:   f8d9 1000       ldr.w   r1, [r9]
 434:   9301            str     r3, [sp, #4]
 436:   3101            adds    r1, #1
 438:   bf1b            ittet   ne
 43a:   eba2 0a0a       subne.w sl, r2, sl
 43e:   4450            addne   r0, sl
 440:   f8c9 2000       streq.w r2, [r9]
 444:   6018            strne   r0, [r3, #0]
 446:   f012 0a07       ands.w  sl, r2, #7
 44a:   f000 8114       beq.w   676 <_malloc_r+0x466>
 44e:   f1ca 0108       rsb     r1, sl, #8
 452:   440a            add     r2, r1
 454:   f5ca 5180       rsb     r1, sl, #4096   ; 0x1000
 458:   4493            add     fp, r2
 45a:   3108            adds    r1, #8
 45c:   eba1 010b       sub.w   r1, r1, fp
 460:   f3c1 090b       ubfx    r9, r1, #0, #12
 464:   4649            mov     r1, r9
 466:   4630            mov     r0, r6
 468:   9200            str     r2, [sp, #0]
 46a:   f000 f9e7       bl      83c <_sbrk_r>
 46e:   1c42            adds    r2, r0, #1
 470:   e9dd 2300       ldrd    r2, r3, [sp]
 474:   f000 815c       beq.w   730 <_malloc_r+0x520>
 478:   1a80            subs    r0, r0, r2
 47a:   eb00 0b09       add.w   fp, r0, r9
 47e:   6819            ldr     r1, [r3, #0]
 480:   f8c8 2008       str.w   r2, [r8, #8]
 484:   f04b 0001       orr.w   r0, fp, #1
 488:   4449            add     r1, r9
 48a:   4544            cmp     r4, r8
 48c:   6050            str     r0, [r2, #4]
 48e:   6019            str     r1, [r3, #0]
 490:   f000 8126       beq.w   6e0 <_malloc_r+0x4d0>
 494:   2f0f            cmp     r7, #15
 496:   f240 8125       bls.w   6e4 <_malloc_r+0x4d4>
 49a:   6860            ldr     r0, [r4, #4]
 49c:   3f0c            subs    r7, #12
 49e:   f027 0707       bic.w   r7, r7, #7
 4a2:   f000 0001       and.w   r0, r0, #1
 4a6:   eb04 0c07       add.w   ip, r4, r7
 4aa:   4338            orrs    r0, r7
 4ac:   f04f 0e05       mov.w   lr, #5
 4b0:   2f0f            cmp     r7, #15
 4b2:   6060            str     r0, [r4, #4]
 4b4:   e9cc ee01       strd    lr, lr, [ip, #4]
 4b8:   f200 8142       bhi.w   740 <_malloc_r+0x530>
 4bc:   6850            ldr     r0, [r2, #4]
 4be:   4614            mov     r4, r2
 4c0:   4b96            ldr     r3, [pc, #600]  ; (71c <_malloc_r+0x50c>)
 4c2:   681a            ldr     r2, [r3, #0]
 4c4:   428a            cmp     r2, r1
 4c6:   bf38            it      cc
 4c8:   6019            strcc   r1, [r3, #0]
 4ca:   4b95            ldr     r3, [pc, #596]  ; (720 <_malloc_r+0x510>)
 4cc:   681a            ldr     r2, [r3, #0]
 4ce:   428a            cmp     r2, r1
 4d0:   bf38            it      cc
 4d2:   6019            strcc   r1, [r3, #0]
 4d4:   e090            b.n     5f8 <_malloc_r+0x3e8>
 4d6:   1962            adds    r2, r4, r5
 4d8:   f043 0301       orr.w   r3, r3, #1
 4dc:   f045 0501       orr.w   r5, r5, #1
 4e0:   6065            str     r5, [r4, #4]
 4e2:   4630            mov     r0, r6
 4e4:   f8c8 2008       str.w   r2, [r8, #8]
 4e8:   6053            str     r3, [r2, #4]
 4ea:   f000 f9a1       bl      830 <__malloc_unlock>
 4ee:   3408            adds    r4, #8
 4f0:   4620            mov     r0, r4
 4f2:   b003            add     sp, #12
 4f4:   e8bd 8ff0       ldmia.w sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 4f8:   4423            add     r3, r4
 4fa:   68e1            ldr     r1, [r4, #12]
 4fc:   685a            ldr     r2, [r3, #4]
 4fe:   68a5            ldr     r5, [r4, #8]
 500:   f042 0201       orr.w   r2, r2, #1
 504:   60e9            str     r1, [r5, #12]
 506:   4630            mov     r0, r6
 508:   608d            str     r5, [r1, #8]
 50a:   605a            str     r2, [r3, #4]
 50c:   f000 f990       bl      830 <__malloc_unlock>
 510:   3408            adds    r4, #8
 512:   e742            b.n     39a <_malloc_r+0x18a>
 514:   f5b2 6f20       cmp.w   r2, #2560       ; 0xa00
 518:   ea4f 2352       mov.w   r3, r2, lsr #9
 51c:   d361            bcc.n   5e2 <_malloc_r+0x3d2>
 51e:   2b14            cmp     r3, #20
 520:   f200 80ba       bhi.w   698 <_malloc_r+0x488>
 524:   f103 005c       add.w   r0, r3, #92     ; 0x5c
 528:   00c0            lsls    r0, r0, #3
 52a:   335b            adds    r3, #91 ; 0x5b
 52c:   eb08 0700       add.w   r7, r8, r0
 530:   f858 0000       ldr.w   r0, [r8, r0]
 534:   3f08            subs    r7, #8
 536:   4287            cmp     r7, r0
 538:   f000 8092       beq.w   660 <_malloc_r+0x450>
 53c:   6843            ldr     r3, [r0, #4]
 53e:   f023 0303       bic.w   r3, r3, #3
 542:   4293            cmp     r3, r2
 544:   d902            bls.n   54c <_malloc_r+0x33c>
 546:   6880            ldr     r0, [r0, #8]
 548:   4287            cmp     r7, r0
 54a:   d1f7            bne.n   53c <_malloc_r+0x32c>
 54c:   68c7            ldr     r7, [r0, #12]
 54e:   f8d8 2004       ldr.w   r2, [r8, #4]
 552:   e9c4 0702       strd    r0, r7, [r4, #8]
 556:   60bc            str     r4, [r7, #8]
 558:   60c4            str     r4, [r0, #12]
 55a:   e6e0            b.n     31e <_malloc_r+0x10e>
 55c:   2b14            cmp     r3, #20
 55e:   d959            bls.n   614 <_malloc_r+0x404>
 560:   2b54            cmp     r3, #84 ; 0x54
 562:   f200 80a1       bhi.w   6a8 <_malloc_r+0x498>
 566:   0b2b            lsrs    r3, r5, #12
 568:   f103 016f       add.w   r1, r3, #111    ; 0x6f
 56c:   f103 076e       add.w   r7, r3, #110    ; 0x6e
 570:   00cb            lsls    r3, r1, #3
 572:   e693            b.n     29c <_malloc_r+0x8c>
 574:   f10e 0e01       add.w   lr, lr, #1
 578:   f01e 0f03       tst.w   lr, #3
 57c:   f104 0408       add.w   r4, r4, #8
 580:   f47f aedf       bne.w   342 <_malloc_r+0x132>
 584:   e051            b.n     62a <_malloc_r+0x41a>
 586:   443a            add     r2, r7
 588:   463c            mov     r4, r7
 58a:   6853            ldr     r3, [r2, #4]
 58c:   68f9            ldr     r1, [r7, #12]
 58e:   f854 5f08       ldr.w   r5, [r4, #8]!
 592:   f043 0301       orr.w   r3, r3, #1
 596:   6053            str     r3, [r2, #4]
 598:   4630            mov     r0, r6
 59a:   60e9            str     r1, [r5, #12]
 59c:   608d            str     r5, [r1, #8]
 59e:   f000 f947       bl      830 <__malloc_unlock>
 5a2:   e6fa            b.n     39a <_malloc_r+0x18a>
 5a4:   08e9            lsrs    r1, r5, #3
 5a6:   f105 0308       add.w   r3, r5, #8
 5aa:   e641            b.n     230 <_malloc_r+0x20>
 5ac:   4422            add     r2, r4
 5ae:   4630            mov     r0, r6
 5b0:   6853            ldr     r3, [r2, #4]
 5b2:   f043 0301       orr.w   r3, r3, #1
 5b6:   6053            str     r3, [r2, #4]
 5b8:   3408            adds    r4, #8
 5ba:   f000 f939       bl      830 <__malloc_unlock>
 5be:   e6ec            b.n     39a <_malloc_r+0x18a>
 5c0:   1961            adds    r1, r4, r5
 5c2:   f043 0701       orr.w   r7, r3, #1
 5c6:   f045 0501       orr.w   r5, r5, #1
 5ca:   6065            str     r5, [r4, #4]
 5cc:   4630            mov     r0, r6
 5ce:   e9c8 1104       strd    r1, r1, [r8, #16]
 5d2:   e9c1 cc02       strd    ip, ip, [r1, #8]
 5d6:   604f            str     r7, [r1, #4]
 5d8:   50a3            str     r3, [r4, r2]
 5da:   f000 f929       bl      830 <__malloc_unlock>
 5de:   3408            adds    r4, #8
 5e0:   e6db            b.n     39a <_malloc_r+0x18a>
 5e2:   0993            lsrs    r3, r2, #6
 5e4:   f103 0039       add.w   r0, r3, #57     ; 0x39
 5e8:   00c0            lsls    r0, r0, #3
 5ea:   3338            adds    r3, #56 ; 0x38
 5ec:   e79e            b.n     52c <_malloc_r+0x31c>
 5ee:   4544            cmp     r4, r8
 5f0:   d064            beq.n   6bc <_malloc_r+0x4ac>
 5f2:   f8d8 4008       ldr.w   r4, [r8, #8]
 5f6:   6860            ldr     r0, [r4, #4]
 5f8:   f020 0b03       bic.w   fp, r0, #3
 5fc:   455d            cmp     r5, fp
 5fe:   ebab 0305       sub.w   r3, fp, r5
 602:   d802            bhi.n   60a <_malloc_r+0x3fa>
 604:   2b0f            cmp     r3, #15
 606:   f73f af66       bgt.w   4d6 <_malloc_r+0x2c6>
 60a:   4630            mov     r0, r6
 60c:   f000 f910       bl      830 <__malloc_unlock>
 610:   2400            movs    r4, #0
 612:   e6c2            b.n     39a <_malloc_r+0x18a>
 614:   f103 015c       add.w   r1, r3, #92     ; 0x5c
 618:   f103 075b       add.w   r7, r3, #91     ; 0x5b
 61c:   00cb            lsls    r3, r1, #3
 61e:   e63d            b.n     29c <_malloc_r+0x8c>
 620:   f859 3908       ldr.w   r3, [r9], #-8
 624:   454b            cmp     r3, r9
 626:   f040 80aa       bne.w   77e <_malloc_r+0x56e>
 62a:   f011 0f03       tst.w   r1, #3
 62e:   f101 31ff       add.w   r1, r1, #4294967295
 632:   d1f5            bne.n   620 <_malloc_r+0x410>
 634:   f8d8 3004       ldr.w   r3, [r8, #4]
 638:   ea23 0300       bic.w   r3, r3, r0
 63c:   f8c8 3004       str.w   r3, [r8, #4]
 640:   0040            lsls    r0, r0, #1
 642:   4298            cmp     r0, r3
 644:   f63f aec5       bhi.w   3d2 <_malloc_r+0x1c2>
 648:   b918            cbnz    r0, 652 <_malloc_r+0x442>
 64a:   e6c2            b.n     3d2 <_malloc_r+0x1c2>
 64c:   0040            lsls    r0, r0, #1
 64e:   f10e 0e04       add.w   lr, lr, #4
 652:   4218            tst     r0, r3
 654:   d0fa            beq.n   64c <_malloc_r+0x43c>
 656:   4671            mov     r1, lr
 658:   e66f            b.n     33a <_malloc_r+0x12a>
 65a:   f103 0b10       add.w   fp, r3, #16
 65e:   e6d5            b.n     40c <_malloc_r+0x1fc>
 660:   109a            asrs    r2, r3, #2
 662:   f04f 0e01       mov.w   lr, #1
 666:   f8d8 3004       ldr.w   r3, [r8, #4]
 66a:   fa0e f202       lsl.w   r2, lr, r2
 66e:   431a            orrs    r2, r3
 670:   f8c8 2004       str.w   r2, [r8, #4]
 674:   e76d            b.n     552 <_malloc_r+0x342>
 676:   eb02 010b       add.w   r1, r2, fp
 67a:   4249            negs    r1, r1
 67c:   f3c1 090b       ubfx    r9, r1, #0, #12
 680:   4649            mov     r1, r9
 682:   4630            mov     r0, r6
 684:   9200            str     r2, [sp, #0]
 686:   f000 f8d9       bl      83c <_sbrk_r>
 68a:   1c43            adds    r3, r0, #1
 68c:   e9dd 2300       ldrd    r2, r3, [sp]
 690:   f47f aef2       bne.w   478 <_malloc_r+0x268>
 694:   46d1            mov     r9, sl
 696:   e6f2            b.n     47e <_malloc_r+0x26e>
 698:   2b54            cmp     r3, #84 ; 0x54
 69a:   d826            bhi.n   6ea <_malloc_r+0x4da>
 69c:   0b13            lsrs    r3, r2, #12
 69e:   f103 006f       add.w   r0, r3, #111    ; 0x6f
 6a2:   00c0            lsls    r0, r0, #3
 6a4:   336e            adds    r3, #110        ; 0x6e
 6a6:   e741            b.n     52c <_malloc_r+0x31c>
 6a8:   f5b3 7faa       cmp.w   r3, #340        ; 0x154
 6ac:   d826            bhi.n   6fc <_malloc_r+0x4ec>
 6ae:   0beb            lsrs    r3, r5, #15
 6b0:   f103 0178       add.w   r1, r3, #120    ; 0x78
 6b4:   f103 0777       add.w   r7, r3, #119    ; 0x77
 6b8:   00cb            lsls    r3, r1, #3
 6ba:   e5ef            b.n     29c <_malloc_r+0x8c>
 6bc:   4b16            ldr     r3, [pc, #88]   ; (718 <_malloc_r+0x508>)
 6be:   6818            ldr     r0, [r3, #0]
 6c0:   4458            add     r0, fp
 6c2:   6018            str     r0, [r3, #0]
 6c4:   e6b4            b.n     430 <_malloc_r+0x220>
 6c6:   f3ca 0c0b       ubfx    ip, sl, #0, #12
 6ca:   f1bc 0f00       cmp.w   ip, #0
 6ce:   f47f aeaf       bne.w   430 <_malloc_r+0x220>
 6d2:   f8d8 4008       ldr.w   r4, [r8, #8]
 6d6:   44bb            add     fp, r7
 6d8:   f04b 0001       orr.w   r0, fp, #1
 6dc:   6060            str     r0, [r4, #4]
 6de:   e6ef            b.n     4c0 <_malloc_r+0x2b0>
 6e0:   4614            mov     r4, r2
 6e2:   e6ed            b.n     4c0 <_malloc_r+0x2b0>
 6e4:   2301            movs    r3, #1
 6e6:   6053            str     r3, [r2, #4]
 6e8:   e78f            b.n     60a <_malloc_r+0x3fa>
 6ea:   f5b3 7faa       cmp.w   r3, #340        ; 0x154
 6ee:   d833            bhi.n   758 <_malloc_r+0x548>
 6f0:   0bd3            lsrs    r3, r2, #15
 6f2:   f103 0078       add.w   r0, r3, #120    ; 0x78
 6f6:   00c0            lsls    r0, r0, #3
 6f8:   3377            adds    r3, #119        ; 0x77
 6fa:   e717            b.n     52c <_malloc_r+0x31c>
 6fc:   f240 5254       movw    r2, #1364       ; 0x554
 700:   4293            cmp     r3, r2
 702:   d833            bhi.n   76c <_malloc_r+0x55c>
 704:   0cab            lsrs    r3, r5, #18
 706:   f103 017d       add.w   r1, r3, #125    ; 0x7d
 70a:   f103 077c       add.w   r7, r3, #124    ; 0x7c
 70e:   00cb            lsls    r3, r1, #3
 710:   e5c4            b.n     29c <_malloc_r+0x8c>
 712:   bf00            nop
 714:   200008cc        .word   0x200008cc
 718:   2000089c        .word   0x2000089c
 71c:   200008c4        .word   0x200008c4
 720:   200008c8        .word   0x200008c8
 724:   20000460        .word   0x20000460
 728:   20000468        .word   0x20000468
 72c:   20000868        .word   0x20000868
 730:   f1aa 0a08       sub.w   sl, sl, #8
 734:   44d3            add     fp, sl
 736:   ebab 0b02       sub.w   fp, fp, r2
 73a:   f04f 0900       mov.w   r9, #0
 73e:   e69e            b.n     47e <_malloc_r+0x26e>
 740:   f104 0108       add.w   r1, r4, #8
 744:   4630            mov     r0, r6
 746:   9300            str     r3, [sp, #0]
 748:   f000 f966       bl      a18 <_free_r>
 74c:   f8d8 4008       ldr.w   r4, [r8, #8]
 750:   9b00            ldr     r3, [sp, #0]
 752:   6860            ldr     r0, [r4, #4]
 754:   6819            ldr     r1, [r3, #0]
 756:   e6b3            b.n     4c0 <_malloc_r+0x2b0>
 758:   f240 5054       movw    r0, #1364       ; 0x554
 75c:   4283            cmp     r3, r0
 75e:   d80a            bhi.n   776 <_malloc_r+0x566>
 760:   0c93            lsrs    r3, r2, #18
 762:   f103 007d       add.w   r0, r3, #125    ; 0x7d
 766:   00c0            lsls    r0, r0, #3
 768:   337c            adds    r3, #124        ; 0x7c
 76a:   e6df            b.n     52c <_malloc_r+0x31c>
 76c:   f44f 737e       mov.w   r3, #1016       ; 0x3f8
 770:   217f            movs    r1, #127        ; 0x7f
 772:   277e            movs    r7, #126        ; 0x7e
 774:   e592            b.n     29c <_malloc_r+0x8c>
 776:   f44f 707e       mov.w   r0, #1016       ; 0x3f8
 77a:   237e            movs    r3, #126        ; 0x7e
 77c:   e6d6            b.n     52c <_malloc_r+0x31c>
 77e:   f8d8 3004       ldr.w   r3, [r8, #4]
 782:   e75d            b.n     640 <_malloc_r+0x430>

00000784 <memset>:
 784:   b4f0            push    {r4, r5, r6, r7}
 786:   0786            lsls    r6, r0, #30
 788:   d046            beq.n   818 <memset+0x94>
 78a:   1e54            subs    r4, r2, #1
 78c:   2a00            cmp     r2, #0
 78e:   d03c            beq.n   80a <memset+0x86>
 790:   b2ca            uxtb    r2, r1
 792:   4603            mov     r3, r0
 794:   e001            b.n     79a <memset+0x16>
 796:   3c01            subs    r4, #1
 798:   d337            bcc.n   80a <memset+0x86>
 79a:   f803 2b01       strb.w  r2, [r3], #1
 79e:   079d            lsls    r5, r3, #30
 7a0:   d1f9            bne.n   796 <memset+0x12>
 7a2:   2c03            cmp     r4, #3
 7a4:   d92a            bls.n   7fc <memset+0x78>
 7a6:   b2cd            uxtb    r5, r1
 7a8:   ea45 2505       orr.w   r5, r5, r5, lsl #8
 7ac:   2c0f            cmp     r4, #15
 7ae:   ea45 4505       orr.w   r5, r5, r5, lsl #16
 7b2:   d934            bls.n   81e <memset+0x9a>
 7b4:   f1a4 0210       sub.w   r2, r4, #16
 7b8:   f022 0c0f       bic.w   ip, r2, #15
 7bc:   f103 0720       add.w   r7, r3, #32
 7c0:   0916            lsrs    r6, r2, #4
 7c2:   4467            add     r7, ip
 7c4:   f103 0210       add.w   r2, r3, #16
 7c8:   e942 5504       strd    r5, r5, [r2, #-16]
 7cc:   e942 5502       strd    r5, r5, [r2, #-8]
 7d0:   3210            adds    r2, #16
 7d2:   42ba            cmp     r2, r7
 7d4:   d1f8            bne.n   7c8 <memset+0x44>
 7d6:   1c72            adds    r2, r6, #1
 7d8:   f014 0f0c       tst.w   r4, #12
 7dc:   eb03 1202       add.w   r2, r3, r2, lsl #4
 7e0:   f004 060f       and.w   r6, r4, #15
 7e4:   d013            beq.n   80e <memset+0x8a>
 7e6:   1f33            subs    r3, r6, #4
 7e8:   f023 0303       bic.w   r3, r3, #3
 7ec:   3304            adds    r3, #4
 7ee:   4413            add     r3, r2
 7f0:   f842 5b04       str.w   r5, [r2], #4
 7f4:   4293            cmp     r3, r2
 7f6:   d1fb            bne.n   7f0 <memset+0x6c>
 7f8:   f006 0403       and.w   r4, r6, #3
 7fc:   b12c            cbz     r4, 80a <memset+0x86>
 7fe:   b2ca            uxtb    r2, r1
 800:   441c            add     r4, r3
 802:   f803 2b01       strb.w  r2, [r3], #1
 806:   429c            cmp     r4, r3
 808:   d1fb            bne.n   802 <memset+0x7e>
 80a:   bcf0            pop     {r4, r5, r6, r7}
 80c:   4770            bx      lr
 80e:   4634            mov     r4, r6
 810:   4613            mov     r3, r2
 812:   2c00            cmp     r4, #0
 814:   d1f3            bne.n   7fe <memset+0x7a>
 816:   e7f8            b.n     80a <memset+0x86>
 818:   4614            mov     r4, r2
 81a:   4603            mov     r3, r0
 81c:   e7c1            b.n     7a2 <memset+0x1e>
 81e:   461a            mov     r2, r3
 820:   4626            mov     r6, r4
 822:   e7e0            b.n     7e6 <memset+0x62>

00000824 <__malloc_lock>:
 824:   4801            ldr     r0, [pc, #4]    ; (82c <__malloc_lock+0x8>)
 826:   f000 ba05       b.w     c34 <__retarget_lock_acquire_recursive>
 82a:   bf00            nop
 82c:   200008e4        .word   0x200008e4

00000830 <__malloc_unlock>:
 830:   4801            ldr     r0, [pc, #4]    ; (838 <__malloc_unlock+0x8>)
 832:   f000 ba07       b.w     c44 <__retarget_lock_release_recursive>
 836:   bf00            nop
 838:   200008e4        .word   0x200008e4

0000083c <_sbrk_r>:
 83c:   b538            push    {r3, r4, r5, lr}
 83e:   4d07            ldr     r5, [pc, #28]   ; (85c <_sbrk_r+0x20>)
 840:   2200            movs    r2, #0
 842:   4604            mov     r4, r0
 844:   4608            mov     r0, r1
 846:   602a            str     r2, [r5, #0]
 848:   f000 fa94       bl      d74 <_sbrk>
 84c:   1c43            adds    r3, r0, #1
 84e:   d000            beq.n   852 <_sbrk_r+0x16>
 850:   bd38            pop     {r3, r4, r5, pc}
 852:   682b            ldr     r3, [r5, #0]
 854:   2b00            cmp     r3, #0
 856:   d0fb            beq.n   850 <_sbrk_r+0x14>
 858:   6023            str     r3, [r4, #0]
 85a:   bd38            pop     {r3, r4, r5, pc}
 85c:   200008f8        .word   0x200008f8

00000860 <register_fini>:
 860:   4b02            ldr     r3, [pc, #8]    ; (86c <register_fini+0xc>)
 862:   b113            cbz     r3, 86a <register_fini+0xa>
 864:   4802            ldr     r0, [pc, #8]    ; (870 <register_fini+0x10>)
 866:   f000 b86b       b.w     940 <atexit>
 86a:   4770            bx      lr
 86c:   00000000        .word   0x00000000
 870:   0000094d        .word   0x0000094d

00000874 <__call_exitprocs>:
 874:   e92d 4ff8       stmdb   sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 878:   4b2f            ldr     r3, [pc, #188]  ; (938 <__call_exitprocs+0xc4>)
 87a:   ed2d 8b02       vpush   {d8}
 87e:   4683            mov     fp, r0
 880:   6818            ldr     r0, [r3, #0]
 882:   460f            mov     r7, r1
 884:   f000 f9d6       bl      c34 <__retarget_lock_acquire_recursive>
 888:   4b2c            ldr     r3, [pc, #176]  ; (93c <__call_exitprocs+0xc8>)
 88a:   f8d3 8000       ldr.w   r8, [r3]
 88e:   f8d8 6148       ldr.w   r6, [r8, #328]  ; 0x148
 892:   b1ae            cbz     r6, 8c0 <__call_exitprocs+0x4c>
 894:   ee08 ba10       vmov    s16, fp
 898:   f04f 0901       mov.w   r9, #1
 89c:   f04f 0a00       mov.w   sl, #0
 8a0:   6874            ldr     r4, [r6, #4]
 8a2:   1e65            subs    r5, r4, #1
 8a4:   d40c            bmi.n   8c0 <__call_exitprocs+0x4c>
 8a6:   3401            adds    r4, #1
 8a8:   eb06 0484       add.w   r4, r6, r4, lsl #2
 8ac:   b187            cbz     r7, 8d0 <__call_exitprocs+0x5c>
 8ae:   f8d4 3100       ldr.w   r3, [r4, #256]  ; 0x100
 8b2:   42bb            cmp     r3, r7
 8b4:   d00c            beq.n   8d0 <__call_exitprocs+0x5c>
 8b6:   3d01            subs    r5, #1
 8b8:   1c6b            adds    r3, r5, #1
 8ba:   f1a4 0404       sub.w   r4, r4, #4
 8be:   d1f5            bne.n   8ac <__call_exitprocs+0x38>
 8c0:   ecbd 8b02       vpop    {d8}
 8c4:   4b1c            ldr     r3, [pc, #112]  ; (938 <__call_exitprocs+0xc4>)
 8c6:   6818            ldr     r0, [r3, #0]
 8c8:   e8bd 4ff8       ldmia.w sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8cc:   f000 b9ba       b.w     c44 <__retarget_lock_release_recursive>
 8d0:   6873            ldr     r3, [r6, #4]
 8d2:   6822            ldr     r2, [r4, #0]
 8d4:   3b01            subs    r3, #1
 8d6:   42ab            cmp     r3, r5
 8d8:   bf0c            ite     eq
 8da:   6075            streq   r5, [r6, #4]
 8dc:   f8c4 a000       strne.w sl, [r4]
 8e0:   2a00            cmp     r2, #0
 8e2:   d0e8            beq.n   8b6 <__call_exitprocs+0x42>
 8e4:   f8d6 0188       ldr.w   r0, [r6, #392]  ; 0x188
 8e8:   f8d6 b004       ldr.w   fp, [r6, #4]
 8ec:   fa09 f105       lsl.w   r1, r9, r5
 8f0:   4201            tst     r1, r0
 8f2:   d10b            bne.n   90c <__call_exitprocs+0x98>
 8f4:   4790            blx     r2
 8f6:   6872            ldr     r2, [r6, #4]
 8f8:   455a            cmp     r2, fp
 8fa:   d113            bne.n   924 <__call_exitprocs+0xb0>
 8fc:   f8d8 3148       ldr.w   r3, [r8, #328]  ; 0x148
 900:   42b3            cmp     r3, r6
 902:   d0d8            beq.n   8b6 <__call_exitprocs+0x42>
 904:   461e            mov     r6, r3
 906:   2e00            cmp     r6, #0
 908:   d1ca            bne.n   8a0 <__call_exitprocs+0x2c>
 90a:   e7d9            b.n     8c0 <__call_exitprocs+0x4c>
 90c:   f8d6 018c       ldr.w   r0, [r6, #396]  ; 0x18c
 910:   4201            tst     r1, r0
 912:   d10c            bne.n   92e <__call_exitprocs+0xba>
 914:   f8d4 1080       ldr.w   r1, [r4, #128]  ; 0x80
 918:   ee18 0a10       vmov    r0, s16
 91c:   4790            blx     r2
 91e:   6872            ldr     r2, [r6, #4]
 920:   455a            cmp     r2, fp
 922:   d0eb            beq.n   8fc <__call_exitprocs+0x88>
 924:   f8d8 6148       ldr.w   r6, [r8, #328]  ; 0x148
 928:   2e00            cmp     r6, #0
 92a:   d1b9            bne.n   8a0 <__call_exitprocs+0x2c>
 92c:   e7c8            b.n     8c0 <__call_exitprocs+0x4c>
 92e:   f8d4 0080       ldr.w   r0, [r4, #128]  ; 0x80
 932:   4790            blx     r2
 934:   e7df            b.n     8f6 <__call_exitprocs+0x82>
 936:   bf00            nop
 938:   20000870        .word   0x20000870
 93c:   00000dcc        .word   0x00000dcc

00000940 <atexit>:
 940:   2300            movs    r3, #0
 942:   4601            mov     r1, r0
 944:   461a            mov     r2, r3
 946:   4618            mov     r0, r3
 948:   f000 b9ce       b.w     ce8 <__register_exitproc>

0000094c <__libc_fini_array>:
 94c:   b538            push    {r3, r4, r5, lr}
 94e:   4b08            ldr     r3, [pc, #32]   ; (970 <__libc_fini_array+0x24>)
 950:   4d08            ldr     r5, [pc, #32]   ; (974 <__libc_fini_array+0x28>)
 952:   1b5b            subs    r3, r3, r5
 954:   109c            asrs    r4, r3, #2
 956:   d007            beq.n   968 <__libc_fini_array+0x1c>
 958:   3b04            subs    r3, #4
 95a:   441d            add     r5, r3
 95c:   3c01            subs    r4, #1
 95e:   f855 3904       ldr.w   r3, [r5], #-4
 962:   4798            blx     r3
 964:   2c00            cmp     r4, #0
 966:   d1f9            bne.n   95c <__libc_fini_array+0x10>
 968:   e8bd 4038       ldmia.w sp!, {r3, r4, r5, lr}
 96c:   f000 ba1c       b.w     da8 <_fini>
        ...

00000978 <_malloc_trim_r>:
 978:   b5f8            push    {r3, r4, r5, r6, r7, lr}
 97a:   4f24            ldr     r7, [pc, #144]  ; (a0c <_malloc_trim_r+0x94>)
 97c:   460c            mov     r4, r1
 97e:   4606            mov     r6, r0
 980:   f7ff ff50       bl      824 <__malloc_lock>
 984:   68bb            ldr     r3, [r7, #8]
 986:   685d            ldr     r5, [r3, #4]
 988:   f5c4 617e       rsb     r1, r4, #4064   ; 0xfe0
 98c:   310f            adds    r1, #15
 98e:   f025 0503       bic.w   r5, r5, #3
 992:   194b            adds    r3, r1, r5
 994:   f423 637f       bic.w   r3, r3, #4080   ; 0xff0
 998:   f023 030f       bic.w   r3, r3, #15
 99c:   f5a3 5480       sub.w   r4, r3, #4096   ; 0x1000
 9a0:   f5b4 5f80       cmp.w   r4, #4096       ; 0x1000
 9a4:   db07            blt.n   9b6 <_malloc_trim_r+0x3e>
 9a6:   2100            movs    r1, #0
 9a8:   4630            mov     r0, r6
 9aa:   f7ff ff47       bl      83c <_sbrk_r>
 9ae:   68bb            ldr     r3, [r7, #8]
 9b0:   442b            add     r3, r5
 9b2:   4298            cmp     r0, r3
 9b4:   d004            beq.n   9c0 <_malloc_trim_r+0x48>
 9b6:   4630            mov     r0, r6
 9b8:   f7ff ff3a       bl      830 <__malloc_unlock>
 9bc:   2000            movs    r0, #0
 9be:   bdf8            pop     {r3, r4, r5, r6, r7, pc}
 9c0:   4261            negs    r1, r4
 9c2:   4630            mov     r0, r6
 9c4:   f7ff ff3a       bl      83c <_sbrk_r>
 9c8:   3001            adds    r0, #1
 9ca:   d00d            beq.n   9e8 <_malloc_trim_r+0x70>
 9cc:   4a10            ldr     r2, [pc, #64]   ; (a10 <_malloc_trim_r+0x98>)
 9ce:   68b9            ldr     r1, [r7, #8]
 9d0:   6813            ldr     r3, [r2, #0]
 9d2:   1b2d            subs    r5, r5, r4
 9d4:   f045 0501       orr.w   r5, r5, #1
 9d8:   4630            mov     r0, r6
 9da:   1b1b            subs    r3, r3, r4
 9dc:   604d            str     r5, [r1, #4]
 9de:   6013            str     r3, [r2, #0]
 9e0:   f7ff ff26       bl      830 <__malloc_unlock>
 9e4:   2001            movs    r0, #1
 9e6:   bdf8            pop     {r3, r4, r5, r6, r7, pc}
 9e8:   2100            movs    r1, #0
 9ea:   4630            mov     r0, r6
 9ec:   f7ff ff26       bl      83c <_sbrk_r>
 9f0:   68ba            ldr     r2, [r7, #8]
 9f2:   1a83            subs    r3, r0, r2
 9f4:   2b0f            cmp     r3, #15
 9f6:   ddde            ble.n   9b6 <_malloc_trim_r+0x3e>
 9f8:   4c06            ldr     r4, [pc, #24]   ; (a14 <_malloc_trim_r+0x9c>)
 9fa:   4905            ldr     r1, [pc, #20]   ; (a10 <_malloc_trim_r+0x98>)
 9fc:   6824            ldr     r4, [r4, #0]
 9fe:   f043 0301       orr.w   r3, r3, #1
 a02:   1b00            subs    r0, r0, r4
 a04:   6053            str     r3, [r2, #4]
 a06:   6008            str     r0, [r1, #0]
 a08:   e7d5            b.n     9b6 <_malloc_trim_r+0x3e>
 a0a:   bf00            nop
 a0c:   20000460        .word   0x20000460
 a10:   2000089c        .word   0x2000089c
 a14:   20000868        .word   0x20000868

00000a18 <_free_r>:
 a18:   2900            cmp     r1, #0
 a1a:   d05e            beq.n   ada <_free_r+0xc2>
 a1c:   b5f8            push    {r3, r4, r5, r6, r7, lr}
 a1e:   460c            mov     r4, r1
 a20:   4606            mov     r6, r0
 a22:   f7ff feff       bl      824 <__malloc_lock>
 a26:   f854 3c04       ldr.w   r3, [r4, #-4]
 a2a:   f8df c1f0       ldr.w   ip, [pc, #496]  ; c1c <_free_r+0x204>
 a2e:   f023 0101       bic.w   r1, r3, #1
 a32:   f1a4 0008       sub.w   r0, r4, #8
 a36:   1842            adds    r2, r0, r1
 a38:   f8dc 7008       ldr.w   r7, [ip, #8]
 a3c:   6855            ldr     r5, [r2, #4]
 a3e:   4297            cmp     r7, r2
 a40:   f025 0503       bic.w   r5, r5, #3
 a44:   f000 8088       beq.w   b58 <_free_r+0x140>
 a48:   07df            lsls    r7, r3, #31
 a4a:   6055            str     r5, [r2, #4]
 a4c:   d433            bmi.n   ab6 <_free_r+0x9e>
 a4e:   f854 7c08       ldr.w   r7, [r4, #-8]
 a52:   1bc0            subs    r0, r0, r7
 a54:   f10c 0408       add.w   r4, ip, #8
 a58:   6883            ldr     r3, [r0, #8]
 a5a:   42a3            cmp     r3, r4
 a5c:   4439            add     r1, r7
 a5e:   d069            beq.n   b34 <_free_r+0x11c>
 a60:   1957            adds    r7, r2, r5
 a62:   f8d0 e00c       ldr.w   lr, [r0, #12]
 a66:   687f            ldr     r7, [r7, #4]
 a68:   f8c3 e00c       str.w   lr, [r3, #12]
 a6c:   f8ce 3008       str.w   r3, [lr, #8]
 a70:   07fb            lsls    r3, r7, #31
 a72:   f140 8096       bpl.w   ba2 <_free_r+0x18a>
 a76:   f041 0301       orr.w   r3, r1, #1
 a7a:   6043            str     r3, [r0, #4]
 a7c:   6011            str     r1, [r2, #0]
 a7e:   f5b1 7f00       cmp.w   r1, #512        ; 0x200
 a82:   d233            bcs.n   aec <_free_r+0xd4>
 a84:   08cb            lsrs    r3, r1, #3
 a86:   f8dc 4004       ldr.w   r4, [ip, #4]
 a8a:   3301            adds    r3, #1
 a8c:   094a            lsrs    r2, r1, #5
 a8e:   2101            movs    r1, #1
 a90:   4091            lsls    r1, r2
 a92:   4321            orrs    r1, r4
 a94:   eb0c 02c3       add.w   r2, ip, r3, lsl #3
 a98:   f85c 4033       ldr.w   r4, [ip, r3, lsl #3]
 a9c:   f8cc 1004       str.w   r1, [ip, #4]
 aa0:   3a08            subs    r2, #8
 aa2:   e9c0 4202       strd    r4, r2, [r0, #8]
 aa6:   f84c 0033       str.w   r0, [ip, r3, lsl #3]
 aaa:   60e0            str     r0, [r4, #12]
 aac:   4630            mov     r0, r6
 aae:   e8bd 40f8       ldmia.w sp!, {r3, r4, r5, r6, r7, lr}
 ab2:   f7ff bebd       b.w     830 <__malloc_unlock>
 ab6:   1953            adds    r3, r2, r5
 ab8:   685b            ldr     r3, [r3, #4]
 aba:   07df            lsls    r7, r3, #31
 abc:   d40e            bmi.n   adc <_free_r+0xc4>
 abe:   4429            add     r1, r5
 ac0:   f10c 0408       add.w   r4, ip, #8
 ac4:   6893            ldr     r3, [r2, #8]
 ac6:   42a3            cmp     r3, r4
 ac8:   d073            beq.n   bb2 <_free_r+0x19a>
 aca:   68d4            ldr     r4, [r2, #12]
 acc:   60dc            str     r4, [r3, #12]
 ace:   f041 0201       orr.w   r2, r1, #1
 ad2:   60a3            str     r3, [r4, #8]
 ad4:   6042            str     r2, [r0, #4]
 ad6:   5041            str     r1, [r0, r1]
 ad8:   e7d1            b.n     a7e <_free_r+0x66>
 ada:   4770            bx      lr
 adc:   f041 0301       orr.w   r3, r1, #1
 ae0:   f5b1 7f00       cmp.w   r1, #512        ; 0x200
 ae4:   f844 3c04       str.w   r3, [r4, #-4]
 ae8:   6011            str     r1, [r2, #0]
 aea:   d3cb            bcc.n   a84 <_free_r+0x6c>
 aec:   f5b1 6f20       cmp.w   r1, #2560       ; 0xa00
 af0:   ea4f 2351       mov.w   r3, r1, lsr #9
 af4:   d24a            bcs.n   b8c <_free_r+0x174>
 af6:   098b            lsrs    r3, r1, #6
 af8:   f103 0539       add.w   r5, r3, #57     ; 0x39
 afc:   00ed            lsls    r5, r5, #3
 afe:   f103 0238       add.w   r2, r3, #56     ; 0x38
 b02:   f85c 3005       ldr.w   r3, [ip, r5]
 b06:   eb0c 0405       add.w   r4, ip, r5
 b0a:   3c08            subs    r4, #8
 b0c:   429c            cmp     r4, r3
 b0e:   d059            beq.n   bc4 <_free_r+0x1ac>
 b10:   685a            ldr     r2, [r3, #4]
 b12:   f022 0203       bic.w   r2, r2, #3
 b16:   428a            cmp     r2, r1
 b18:   d902            bls.n   b20 <_free_r+0x108>
 b1a:   689b            ldr     r3, [r3, #8]
 b1c:   429c            cmp     r4, r3
 b1e:   d1f7            bne.n   b10 <_free_r+0xf8>
 b20:   68dc            ldr     r4, [r3, #12]
 b22:   e9c0 3402       strd    r3, r4, [r0, #8]
 b26:   60a0            str     r0, [r4, #8]
 b28:   60d8            str     r0, [r3, #12]
 b2a:   4630            mov     r0, r6
 b2c:   e8bd 40f8       ldmia.w sp!, {r3, r4, r5, r6, r7, lr}
 b30:   f7ff be7e       b.w     830 <__malloc_unlock>
 b34:   1953            adds    r3, r2, r5
 b36:   685b            ldr     r3, [r3, #4]
 b38:   07db            lsls    r3, r3, #31
 b3a:   d466            bmi.n   c0a <_free_r+0x1f2>
 b3c:   e9d2 2302       ldrd    r2, r3, [r2, #8]
 b40:   4429            add     r1, r5
 b42:   f041 0401       orr.w   r4, r1, #1
 b46:   60d3            str     r3, [r2, #12]
 b48:   609a            str     r2, [r3, #8]
 b4a:   6044            str     r4, [r0, #4]
 b4c:   5041            str     r1, [r0, r1]
 b4e:   4630            mov     r0, r6
 b50:   e8bd 40f8       ldmia.w sp!, {r3, r4, r5, r6, r7, lr}
 b54:   f7ff be6c       b.w     830 <__malloc_unlock>
 b58:   07db            lsls    r3, r3, #31
 b5a:   4429            add     r1, r5
 b5c:   d407            bmi.n   b6e <_free_r+0x156>
 b5e:   f854 3c08       ldr.w   r3, [r4, #-8]
 b62:   1ac0            subs    r0, r0, r3
 b64:   4419            add     r1, r3
 b66:   e9d0 2302       ldrd    r2, r3, [r0, #8]
 b6a:   60d3            str     r3, [r2, #12]
 b6c:   609a            str     r2, [r3, #8]
 b6e:   4b29            ldr     r3, [pc, #164]  ; (c14 <_free_r+0x1fc>)
 b70:   681b            ldr     r3, [r3, #0]
 b72:   f041 0201       orr.w   r2, r1, #1
 b76:   428b            cmp     r3, r1
 b78:   6042            str     r2, [r0, #4]
 b7a:   f8cc 0008       str.w   r0, [ip, #8]
 b7e:   d895            bhi.n   aac <_free_r+0x94>
 b80:   4b25            ldr     r3, [pc, #148]  ; (c18 <_free_r+0x200>)
 b82:   4630            mov     r0, r6
 b84:   6819            ldr     r1, [r3, #0]
 b86:   f7ff fef7       bl      978 <_malloc_trim_r>
 b8a:   e78f            b.n     aac <_free_r+0x94>
 b8c:   2b14            cmp     r3, #20
 b8e:   d90a            bls.n   ba6 <_free_r+0x18e>
 b90:   2b54            cmp     r3, #84 ; 0x54
 b92:   d821            bhi.n   bd8 <_free_r+0x1c0>
 b94:   0b0b            lsrs    r3, r1, #12
 b96:   f103 056f       add.w   r5, r3, #111    ; 0x6f
 b9a:   00ed            lsls    r5, r5, #3
 b9c:   f103 026e       add.w   r2, r3, #110    ; 0x6e
 ba0:   e7af            b.n     b02 <_free_r+0xea>
 ba2:   4429            add     r1, r5
 ba4:   e78e            b.n     ac4 <_free_r+0xac>
 ba6:   f103 055c       add.w   r5, r3, #92     ; 0x5c
 baa:   00ed            lsls    r5, r5, #3
 bac:   f103 025b       add.w   r2, r3, #91     ; 0x5b
 bb0:   e7a7            b.n     b02 <_free_r+0xea>
 bb2:   f041 0301       orr.w   r3, r1, #1
 bb6:   e9cc 0004       strd    r0, r0, [ip, #16]
 bba:   e9c0 4402       strd    r4, r4, [r0, #8]
 bbe:   6043            str     r3, [r0, #4]
 bc0:   5041            str     r1, [r0, r1]
 bc2:   e773            b.n     aac <_free_r+0x94>
 bc4:   f8dc 1004       ldr.w   r1, [ip, #4]
 bc8:   1092            asrs    r2, r2, #2
 bca:   2501            movs    r5, #1
 bcc:   fa05 f202       lsl.w   r2, r5, r2
 bd0:   430a            orrs    r2, r1
 bd2:   f8cc 2004       str.w   r2, [ip, #4]
 bd6:   e7a4            b.n     b22 <_free_r+0x10a>
 bd8:   f5b3 7faa       cmp.w   r3, #340        ; 0x154
 bdc:   d806            bhi.n   bec <_free_r+0x1d4>
 bde:   0bcb            lsrs    r3, r1, #15
 be0:   f103 0578       add.w   r5, r3, #120    ; 0x78
 be4:   00ed            lsls    r5, r5, #3
 be6:   f103 0277       add.w   r2, r3, #119    ; 0x77
 bea:   e78a            b.n     b02 <_free_r+0xea>
 bec:   f240 5254       movw    r2, #1364       ; 0x554
 bf0:   4293            cmp     r3, r2
 bf2:   d806            bhi.n   c02 <_free_r+0x1ea>
 bf4:   0c8b            lsrs    r3, r1, #18
 bf6:   f103 057d       add.w   r5, r3, #125    ; 0x7d
 bfa:   00ed            lsls    r5, r5, #3
 bfc:   f103 027c       add.w   r2, r3, #124    ; 0x7c
 c00:   e77f            b.n     b02 <_free_r+0xea>
 c02:   f44f 757e       mov.w   r5, #1016       ; 0x3f8
 c06:   227e            movs    r2, #126        ; 0x7e
 c08:   e77b            b.n     b02 <_free_r+0xea>
 c0a:   f041 0301       orr.w   r3, r1, #1
 c0e:   6043            str     r3, [r0, #4]
 c10:   6011            str     r1, [r2, #0]
 c12:   e74b            b.n     aac <_free_r+0x94>
 c14:   2000086c        .word   0x2000086c
 c18:   200008cc        .word   0x200008cc
 c1c:   20000460        .word   0x20000460

00000c20 <__retarget_lock_init>:
 c20:   4770            bx      lr
 c22:   bf00            nop

00000c24 <__retarget_lock_init_recursive>:
 c24:   4770            bx      lr
 c26:   bf00            nop

00000c28 <__retarget_lock_close>:
 c28:   4770            bx      lr
 c2a:   bf00            nop

00000c2c <__retarget_lock_close_recursive>:
 c2c:   4770            bx      lr
 c2e:   bf00            nop

00000c30 <__retarget_lock_acquire>:
 c30:   4770            bx      lr
 c32:   bf00            nop

00000c34 <__retarget_lock_acquire_recursive>:
 c34:   4770            bx      lr
 c36:   bf00            nop

00000c38 <__retarget_lock_try_acquire>:
 c38:   2001            movs    r0, #1
 c3a:   4770            bx      lr

00000c3c <__retarget_lock_try_acquire_recursive>:
 c3c:   2001            movs    r0, #1
 c3e:   4770            bx      lr

00000c40 <__retarget_lock_release>:
 c40:   4770            bx      lr
 c42:   bf00            nop

00000c44 <__retarget_lock_release_recursive>:
 c44:   4770            bx      lr
 c46:   bf00            nop

00000c48 <cleanup_glue>:
 c48:   b538            push    {r3, r4, r5, lr}
 c4a:   460c            mov     r4, r1
 c4c:   6809            ldr     r1, [r1, #0]
 c4e:   4605            mov     r5, r0
 c50:   b109            cbz     r1, c56 <cleanup_glue+0xe>
 c52:   f7ff fff9       bl      c48 <cleanup_glue>
 c56:   4621            mov     r1, r4
 c58:   4628            mov     r0, r5
 c5a:   e8bd 4038       ldmia.w sp!, {r3, r4, r5, lr}
 c5e:   f7ff bedb       b.w     a18 <_free_r>
 c62:   bf00            nop

00000c64 <_reclaim_reent>:
 c64:   4b1f            ldr     r3, [pc, #124]  ; (ce4 <_reclaim_reent+0x80>)
 c66:   681b            ldr     r3, [r3, #0]
 c68:   4283            cmp     r3, r0
 c6a:   d03a            beq.n   ce2 <_reclaim_reent+0x7e>
 c6c:   6cc1            ldr     r1, [r0, #76]   ; 0x4c
 c6e:   b570            push    {r4, r5, r6, lr}
 c70:   4605            mov     r5, r0
 c72:   b181            cbz     r1, c96 <_reclaim_reent+0x32>
 c74:   2600            movs    r6, #0
 c76:   598c            ldr     r4, [r1, r6]
 c78:   b13c            cbz     r4, c8a <_reclaim_reent+0x26>
 c7a:   4621            mov     r1, r4
 c7c:   6824            ldr     r4, [r4, #0]
 c7e:   4628            mov     r0, r5
 c80:   f7ff feca       bl      a18 <_free_r>
 c84:   2c00            cmp     r4, #0
 c86:   d1f8            bne.n   c7a <_reclaim_reent+0x16>
 c88:   6ce9            ldr     r1, [r5, #76]   ; 0x4c
 c8a:   3604            adds    r6, #4
 c8c:   2e80            cmp     r6, #128        ; 0x80
 c8e:   d1f2            bne.n   c76 <_reclaim_reent+0x12>
 c90:   4628            mov     r0, r5
 c92:   f7ff fec1       bl      a18 <_free_r>
 c96:   6c29            ldr     r1, [r5, #64]   ; 0x40
 c98:   b111            cbz     r1, ca0 <_reclaim_reent+0x3c>
 c9a:   4628            mov     r0, r5
 c9c:   f7ff febc       bl      a18 <_free_r>
 ca0:   f8d5 4148       ldr.w   r4, [r5, #328]  ; 0x148
 ca4:   b154            cbz     r4, cbc <_reclaim_reent+0x58>
 ca6:   f505 76a6       add.w   r6, r5, #332    ; 0x14c
 caa:   42b4            cmp     r4, r6
 cac:   d006            beq.n   cbc <_reclaim_reent+0x58>
 cae:   4621            mov     r1, r4
 cb0:   6824            ldr     r4, [r4, #0]
 cb2:   4628            mov     r0, r5
 cb4:   f7ff feb0       bl      a18 <_free_r>
 cb8:   42a6            cmp     r6, r4
 cba:   d1f8            bne.n   cae <_reclaim_reent+0x4a>
 cbc:   6d69            ldr     r1, [r5, #84]   ; 0x54
 cbe:   b111            cbz     r1, cc6 <_reclaim_reent+0x62>
 cc0:   4628            mov     r0, r5
 cc2:   f7ff fea9       bl      a18 <_free_r>
 cc6:   6bab            ldr     r3, [r5, #56]   ; 0x38
 cc8:   b153            cbz     r3, ce0 <_reclaim_reent+0x7c>
 cca:   6beb            ldr     r3, [r5, #60]   ; 0x3c
 ccc:   4628            mov     r0, r5
 cce:   4798            blx     r3
 cd0:   f8d5 12e0       ldr.w   r1, [r5, #736]  ; 0x2e0
 cd4:   b121            cbz     r1, ce0 <_reclaim_reent+0x7c>
 cd6:   4628            mov     r0, r5
 cd8:   e8bd 4070       ldmia.w sp!, {r4, r5, r6, lr}
 cdc:   f7ff bfb4       b.w     c48 <cleanup_glue>
 ce0:   bd70            pop     {r4, r5, r6, pc}
 ce2:   4770            bx      lr
 ce4:   20000030        .word   0x20000030

00000ce8 <__register_exitproc>:
 ce8:   e92d 47f0       stmdb   sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 cec:   f8df a080       ldr.w   sl, [pc, #128]  ; d70 <__register_exitproc+0x88>
 cf0:   4606            mov     r6, r0
 cf2:   f8da 0000       ldr.w   r0, [sl]
 cf6:   4698            mov     r8, r3
 cf8:   460f            mov     r7, r1
 cfa:   4691            mov     r9, r2
 cfc:   f7ff ff9a       bl      c34 <__retarget_lock_acquire_recursive>
 d00:   4b1a            ldr     r3, [pc, #104]  ; (d6c <__register_exitproc+0x84>)
 d02:   681b            ldr     r3, [r3, #0]
 d04:   f8d3 4148       ldr.w   r4, [r3, #328]  ; 0x148
 d08:   b324            cbz     r4, d54 <__register_exitproc+0x6c>
 d0a:   6865            ldr     r5, [r4, #4]
 d0c:   2d1f            cmp     r5, #31
 d0e:   dc26            bgt.n   d5e <__register_exitproc+0x76>
 d10:   b95e            cbnz    r6, d2a <__register_exitproc+0x42>
 d12:   1cab            adds    r3, r5, #2
 d14:   3501            adds    r5, #1
 d16:   f8da 0000       ldr.w   r0, [sl]
 d1a:   6065            str     r5, [r4, #4]
 d1c:   f844 7023       str.w   r7, [r4, r3, lsl #2]
 d20:   f7ff ff90       bl      c44 <__retarget_lock_release_recursive>
 d24:   2000            movs    r0, #0
 d26:   e8bd 87f0       ldmia.w sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 d2a:   eb04 0385       add.w   r3, r4, r5, lsl #2
 d2e:   2101            movs    r1, #1
 d30:   f8c3 9088       str.w   r9, [r3, #136]  ; 0x88
 d34:   f8d4 2188       ldr.w   r2, [r4, #392]  ; 0x188
 d38:   40a9            lsls    r1, r5
 d3a:   430a            orrs    r2, r1
 d3c:   2e02            cmp     r6, #2
 d3e:   f8c4 2188       str.w   r2, [r4, #392]  ; 0x188
 d42:   f8c3 8108       str.w   r8, [r3, #264]  ; 0x108
 d46:   d1e4            bne.n   d12 <__register_exitproc+0x2a>
 d48:   f8d4 318c       ldr.w   r3, [r4, #396]  ; 0x18c
 d4c:   4319            orrs    r1, r3
 d4e:   f8c4 118c       str.w   r1, [r4, #396]  ; 0x18c
 d52:   e7de            b.n     d12 <__register_exitproc+0x2a>
 d54:   f503 74a6       add.w   r4, r3, #332    ; 0x14c
 d58:   f8c3 4148       str.w   r4, [r3, #328]  ; 0x148
 d5c:   e7d5            b.n     d0a <__register_exitproc+0x22>
 d5e:   f8da 0000       ldr.w   r0, [sl]
 d62:   f7ff ff6f       bl      c44 <__retarget_lock_release_recursive>
 d66:   f04f 30ff       mov.w   r0, #4294967295
 d6a:   e7dc            b.n     d26 <__register_exitproc+0x3e>
 d6c:   00000dcc        .word   0x00000dcc
 d70:   20000870        .word   0x20000870

00000d74 <_sbrk>:
 d74:   4a04            ldr     r2, [pc, #16]   ; (d88 <_sbrk+0x14>)
 d76:   4905            ldr     r1, [pc, #20]   ; (d8c <_sbrk+0x18>)
 d78:   6813            ldr     r3, [r2, #0]
 d7a:   2b00            cmp     r3, #0
 d7c:   bf08            it      eq
 d7e:   460b            moveq   r3, r1
 d80:   4418            add     r0, r3
 d82:   6010            str     r0, [r2, #0]
 d84:   4618            mov     r0, r3
 d86:   4770            bx      lr
 d88:   200008d0        .word   0x200008d0
 d8c:   200008fc        .word   0x200008fc

00000d90 <_exit>:
 d90:   e7fe            b.n     d90 <_exit>
 d92:   bf00            nop

00000d94 <__frame_dummy_init_array_entry>:
 d94:   0025 0000 0861 0000                         %...a...

00000d9c <_init>:
 d9c:   b5f8            push    {r3, r4, r5, r6, r7, lr}
 d9e:   bf00            nop
 da0:   bcf8            pop     {r3, r4, r5, r6, r7}
 da2:   bc08            pop     {r3}
 da4:   469e            mov     lr, r3
 da6:   4770            bx      lr

00000da8 <_fini>:
 da8:   b5f8            push    {r3, r4, r5, r6, r7, lr}
 daa:   bf00            nop

00000dac <__do_global_dtors_aux_fini_array_entry>:
 dac:   0001 0000 bcf8 bc08 469e 4770               .........FpG